#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface SMF service
#   Valid for Ubuntu-18.04 (bionic),
#             Ubuntu-20.04 (focal),
#             Ubuntu-22.04 (jammy)
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# BUILDER IMAGE
#---------------------------------------------------------------------
ARG BASE_IMAGE=ubuntu:bionic
FROM oai-smf-base:latest as oai-smf-builder

RUN rm -Rf /openair-smf/
WORKDIR /openair-smf/
COPY . /openair-smf

# Building SMF
WORKDIR /openair-smf/build/scripts
RUN ldconfig && \
    cp -Rf /openair-smf-ext-ref /openair-smf/build/ext && \
    ./build_smf --clean --Verbose --build-type Release --jobs && \
    ldd /openair-smf/build/smf/build/smf && \
    mv /openair-smf/build/smf/build/smf /openair-smf/build/smf/build/oai_smf

#---------------------------------------------------------------------
# TARGET IMAGE
#---------------------------------------------------------------------
FROM $BASE_IMAGE as oai-smf
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris
# We install some debug tools for the moment in addition of mandatory libraries
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
      python3 \
      python3-jinja2 \
      psmisc \
      net-tools \
      bc \
      libssh-4 \
      openssl \
      libbrotli1 \
      netbase \
# Ubuntu 18 --> libasan4
# Ubuntu 20 --> libasan5
# Ubuntu 22 --> libasan6
#      libasan? \
      libgssapi-krb5-2 \
# Ubuntu 18/20 --> libldap-2.4-2
# Ubuntu 22 --> libldap-2.5-0
      libldap-2.?-? \
      libconfig++9v5 \
      libsctp1 \
      librtmp1 \
      libpsl5 \
      libcurl?-gnutls \
# Ubuntu 18 --> boost62/65 -> will remove both
# Ubuntu 20 --> boost67/71 -> will remove 67
# Ubuntu 22 --> boost74
      libboost-thread1.??.0 \
      libboost-chrono1.??.0 \
  && rm -rf /var/lib/apt/lists/* \
       /lib/x86_64-linux-gnu/libboost_system.so.1.6*.0 \
       /lib/x86_64-linux-gnu/libboost_chrono.so.1.6*.0 \
       /lib/x86_64-linux-gnu/libboost_thread.so.1.6*.0

# Copying executable and generated libraries
WORKDIR /openair-smf/bin
COPY --from=oai-smf-builder \
    /openair-smf/build/smf/build/oai_smf \
    /openair-smf/scripts/entrypoint.py \
    /openair-smf/scripts/healthcheck.sh \
    ./

WORKDIR /usr/local/lib/
COPY --from=oai-smf-builder \
# Copying only the packages built from source
    /usr/local/lib/libnghttp2.so.14 \
    /usr/local/lib/libnghttp2_asio.so.1 \
    /usr/local/lib/libpistache.so \
    /openair-smf/build/smf/build/nas/libNAS.so \
# Ubuntu 18 --> boost 67 will be copied
    /usr/lib/libboost_system.so.1.* \
    /usr/lib/libboost_thread.so.1.* \
    /usr/lib/libboost_chrono.so.1.* \
    ./

RUN ldconfig && \
    ldd /openair-smf/bin/oai_smf

# Copying template configuration files
# The configuration folder will be flat
WORKDIR /openair-smf/etc
COPY --from=oai-smf-builder /openair-smf/etc/smf.conf .

WORKDIR /openair-smf

# expose ports
EXPOSE 80/tcp 9090/tcp 8805/udp
# healthcheck
HEALTHCHECK --interval=10s \
            --timeout=15s \
            --retries=6 \
    CMD /openair-smf/bin/healthcheck.sh

ENTRYPOINT ["python3","/openair-smf/bin/entrypoint.py"]
CMD ["/openair-smf/bin/oai_smf", "-c", "/openair-smf/etc/smf.conf", "-o"]
