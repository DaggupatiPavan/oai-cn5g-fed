UDR =
{
  # 0 is the default
  INSTANCE_ID   = {{ env["INSTANCE"] if "INSTANCE" in env.keys() else 0 }};
  # /var/run is the default
  PID_DIRECTORY = "{{ env["PID_DIRECTORY"] if "PID_DIRECTORY" in env.keys() else '/var/run' }}";
  UDR_NAME      = "{{ env["UDR_NAME"] }}";


  SUPPORT_FEATURES:{
    # Set to yes if UDR will relying on a DNS to resolve UDM's FQDN
    USE_FQDN_DNS = "{{ env["USE_FQDN_DNS"] if "USE_FQDN_DNS" in env.keys() else 'no' }}";
    # Set to yes if UDR resgisters to an NRF
    REGISTER_NRF = "{{ env["REGISTER_NRF"] if "REGISTER_NRF" in env.keys() else 'no' }}";
    # Set to yes to enable HTTP2 for UDR server
    USE_HTTP2    = "{{ env["USE_HTTP2"] if "USE_HTTP2" in env.keys() else 'no' }}";
    # Set to 'MySQL'/'Cassandra' to use MySQL/Cassandra
    DATABASE     = "MySQL";
  };

  INTERFACES:
  {
    # NUDR Interface (SBI)
    NUDR:
    {
      INTERFACE_NAME = "{{ env["UDR_INTERFACE_NAME_FOR_NUDR"] }}";
      IPV4_ADDRESS   = "read";
      # Default value: 80
      PORT           = {{ env["UDR_INTERFACE_PORT_FOR_NUDR"] if "UDR_INTERFACE_PORT_FOR_NUDR" in env.keys() else '80' }};
      HTTP2_PORT     = {{ env["UDR_INTERFACE_HTTP2_PORT_FOR_NUDR"] if "UDR_INTERFACE_HTTP2_PORT_FOR_NUDR" in env.keys() else '8080' }};
      API_VERSION    = "{{ env["UDR_API_VERSION"] if "UDR_API_VERSION" in env.keys() else 'v1' }}";
    };
  };

  NRF:
  {
    {%- if env["NRF_HOSTNAME"] is defined %}
    IPV4_ADDRESS   = "{{ resolve(env["NRF_HOSTNAME"]) }}";
    {%- else %}
    IPV4_ADDRESS = "{{ env["NRF_IPV4_ADDRESS"] if "NRF_IPV4_ADDRESS" in env.keys() else '0.0.0.0' }}";
    {%- endif %}
    # YOUR NRF CONFIG HERE (default: 80)
    PORT         = {{ env["NRF_PORT"] if "NRF_PORT" in env.keys() else '80' }};
    # YOUR NRF API VERSION HERE
    API_VERSION  = "{{ env["NRF_API_VERSION"] if "NRF_API_VERSION" in env.keys() else 'v1' }}";
    FQDN         = "{{ env["NRF_FQDN"] if "NRF_FQDN" in env.keys() else 'localhost' }}";
  };

  MYSQL:
  {
    # MySQL options
    ## MySQL mandatory options
    # MySQL Server address
    {%- if env["MYSQL_SERVER"] is defined %}
    MYSQL_SERVER = "{{ env["MYSQL_SERVER"]}}";
    {%- elif env["MYSQL_IPV4_ADDRESS"] is defined %}
    MYSQL_SERVER = "{{ env["MYSQL_IPV4_ADDRESS"] }}";
    {%- else %}
    MYSQL_SERVER = "mysql"
    {%- endif %}
    MYSQL_USER   = "{{ env["MYSQL_USER"] if "MYSQL_USER" in env.keys() else 'test' }}";   # Database server login
    MYSQL_PASS   = "{{ env["MYSQL_PASS"] if "MYSQL_PASS" in env.keys() else 'test' }}";   # Database server password
    MYSQL_DB     = "{{ env["MYSQL_DB"] if "MYSQL_DB" in env.keys() else 'oai_db' }}";     # Your database name
    # Reset the connection to the DB after expiring the timeout (in second)
    DB_CONNECTION_TIMEOUT = {{ env["DB_CONNECTION_TIMEOUT"] if "DB_CONNECTION_TIMEOUT" in env.keys() else '300' }};
  };
};
