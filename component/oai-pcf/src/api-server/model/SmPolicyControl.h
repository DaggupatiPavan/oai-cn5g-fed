/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2020, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.1.alpha-5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmPolicyControl.h
 *
 *
 */

#ifndef SmPolicyControl_H_
#define SmPolicyControl_H_

#include "SmPolicyDecision.h"
#include "SmPolicyContextData.h"
#include <nlohmann/json.hpp>

namespace oai {
namespace pcf {
namespace model {

/// <summary>
///
/// </summary>
class SmPolicyControl {
 public:
  SmPolicyControl();
  virtual ~SmPolicyControl() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const SmPolicyControl& rhs) const;
  bool operator!=(const SmPolicyControl& rhs) const;

  /////////////////////////////////////////////
  /// SmPolicyControl members

  /// <summary>
  ///
  /// </summary>
  SmPolicyContextData getContext() const;
  void setContext(SmPolicyContextData const& value);
  /// <summary>
  ///
  /// </summary>
  SmPolicyDecision getPolicy() const;
  void setPolicy(SmPolicyDecision const& value);

  friend void to_json(nlohmann::json& j, const SmPolicyControl& o);
  friend void from_json(const nlohmann::json& j, SmPolicyControl& o);

 protected:
  SmPolicyContextData m_Context;

  SmPolicyDecision m_Policy;
};

}  // namespace model
}  // namespace pcf
}  // namespace oai
#endif /* SmPolicyControl_H_ */
