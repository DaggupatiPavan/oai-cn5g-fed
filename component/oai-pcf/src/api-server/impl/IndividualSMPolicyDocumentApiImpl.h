/**
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service Â© 2020, 3GPP Organizational
 * Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.1.alpha-5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualSMPolicyDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_SM_POLICY_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_SM_POLICY_DOCUMENT_API_IMPL_H_

#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <IndividualSMPolicyDocumentApi.h>

#include "ProblemDetails.h"
#include "SmPolicyControl.h"
#include "SmPolicyDecision.h"
#include "SmPolicyDeleteData.h"
#include "SmPolicyUpdateContextData.h"
#include <string>

#include "pcf_app.hpp"

namespace oai {
namespace pcf {
namespace api {

using namespace oai::pcf::model;
using namespace pcf;

class IndividualSMPolicyDocumentApiImpl
    : public oai::pcf::api::IndividualSMPolicyDocumentApi {
 public:
  explicit IndividualSMPolicyDocumentApiImpl(
      const std::shared_ptr<Pistache::Rest::Router>& rtr,
      const std::shared_ptr<pcf::app::pcf_smpc> smpc_service,
      std::string m_address);
  ~IndividualSMPolicyDocumentApiImpl() override = default;

  void delete_sm_policy(
      const std::string& smPolicyId,
      const SmPolicyDeleteData& smPolicyDeleteData,
      Pistache::Http::ResponseWriter& response);
  void get_sm_policy(
      const std::string& smPolicyId, Pistache::Http::ResponseWriter& response);
  void update_sm_policy(
      const std::string& smPolicyId,
      const SmPolicyUpdateContextData& smPolicyUpdateContextData,
      Pistache::Http::ResponseWriter& response);

 private:
  std::string m_address;
  std::shared_ptr<app::pcf_smpc> m_smpc_service;
};

}  // namespace api
}  // namespace pcf
}  // namespace oai

#endif
