#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface NEF service
#   Valid for Ubuntu-18.04 (bionic)
#             Ubuntu-20.04 (focal),
#             Ubuntu-22.04 (jammy)
# The port exposed by container are 8080/tcp , 9090/tcp change it according to your setup
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# BUILDER IMAGE
#---------------------------------------------------------------------
ARG BASE_IMAGE=ubuntu:bionic
FROM oai-nef-base:latest as oai-nef-builder

RUN rm -Rf /openair-nef
WORKDIR /openair-nef/
COPY . /openair-nef

# Building NEF
WORKDIR /openair-nef/build/scripts
RUN ldconfig && \
    cp -Rf /openair-nef-ext-ref /openair-nef/build/ext && \
    ./build_nef --clean --Verbose --build-type Release --jobs && \
    ldd /openair-nef/build/nef/build/nef && \
    mv /openair-nef/build/nef/build/nef /openair-nef/build/nef/build/oai_nef

#---------------------------------------------------------------------
# TARGET IMAGE
#---------------------------------------------------------------------
FROM $BASE_IMAGE as oai-nef
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris
# We install some debug tools for the moment in addition of mandatory libraries
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
      python3 \
      python3-jinja2 \
      psmisc \
      net-tools \
      iputils-ping \
      bc \
      tzdata \
# Ubuntu 18 --> libasan4
# Ubuntu 20 --> libasan5
# Ubuntu 22 --> libasan6
#      libasan? \
      libconfig++9v5 \
# Ubuntu 18 --> libnettle6
# Ubuntu 20 --> libnettle7
# Ubuntu 22 --> libnettle8
      libnettle? \
# Ubuntu 18 --> libhogweed4
# Ubuntu 20 --> libhogweed5
# Ubuntu 22 --> libhogweed6
      libhogweed? \
# Ubuntu 18/20 --> libldap-2.4-2
# Ubuntu 22 --> libldap-2.5-0
      libldap-2.?-? \
      libkrb5-3 \
      libgssapi-krb5-2 \
      libcurl?-gnutls \
      librtmp1 \
      libpsl5 \
# Ubuntu 18 --> boost62/65 -> will remove both
# Ubuntu 20 --> boost67/71 -> will remove 67
# Ubuntu 22 --> boost74
      libboost-thread1.??.0 \
      libboost-chrono1.??.0 \
  && rm -rf /var/lib/apt/lists/* \
       /lib/x86_64-linux-gnu/libboost_system.so.1.6*.0 \
       /lib/x86_64-linux-gnu/libboost_thread.so.1.6*.0 \
       /lib/x86_64-linux-gnu/libboost_chrono.so.1.6*.0

# Copying executable and generated libraries
WORKDIR /openair-nef/bin
COPY --from=oai-nef-builder \
    /openair-nef/build/nef/build/oai_nef \
    /openair-nef/scripts/entrypoint.py \
    /openair-nef/scripts/healthcheck.sh \
    ./

COPY --from=oai-nef-builder \
# Copying only the packages built from source
    /usr/local/lib/libnghttp2.so.14 \
    /usr/local/lib/libnghttp2_asio.so.1 \
    /usr/local/lib/libpistache.so \
# Ubuntu 18 --> boost 67 will be copied
    /usr/lib/libboost_system.so.1.* \
    /usr/lib/libboost_thread.so.1.* \
    /usr/lib/libboost_chrono.so.1.* \
    /usr/local/lib/

RUN ldconfig && \
    ldd /openair-nef/bin/oai_nef

# Copying template configuration files
WORKDIR /openair-nef/etc
COPY --from=oai-nef-builder /openair-nef/etc/nef.conf /openair-nef/etc/

WORKDIR /openair-nef

# expose ports
EXPOSE 80/tcp 9090/tcp
# healthcheck
HEALTHCHECK --interval=10s \
            --timeout=15s \
            --retries=6 \
    CMD /openair-nef/bin/healthcheck.sh

ENTRYPOINT ["python3","/openair-nef/bin/entrypoint.py"]
CMD ["/openair-nef/bin/oai_nef", "-c", "/openair-nef/etc/nef.conf", "-o"]
