################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

NEF =
{
    # 0 is the default
    INSTANCE      = {{ env["INSTANCE"] if "INSTANCE" in env.keys() else '0' }};
    # /var/run is the default
    PID_DIRECTORY = "{{ env["PID_DIRECTORY"] if "PID_DIRECTORY" in env.keys() else '/var/run' }}";

    SBI_INTERFACE :
    {
        # NEF binded interface for SBI interface (e.g., communication with other NFs e.g., AMF, SMF, UDM)
        INTERFACE_NAME = "{{ env["NEF_INTERFACE_NAME_FOR_SBI"] }}";
        IPV4_ADDRESS   = "read";
        # Default: 80
        PORT           = {{ env["NEF_INTERFACE_PORT_FOR_SBI"] if "NEF_INTERFACE_PORT_FOR_SBI" in env.keys() else '80' }};
        # Default: 8080
        HTTP2_PORT     = {{ env["NEF_INTERFACE_HTTP2_PORT_FOR_SBI"] if "NEF_INTERFACE_HTTP2_PORT_FOR_SBI" in env.keys() else '8080' }};
        # Default: v1
        API_VERSION    = "{{ env["NEF_API_VERSION"] if "NEF_API_VERSION" in env.keys() else 'v1' }}";
    };

    AMF :
    {
      {%- if env["AMF_HOSTNAME"] is defined %}
      IPV4_ADDRESS = "{{ resolve(env["AMF_HOSTNAME"]) }}";
      {%- else %}
      IPV4_ADDRESS = "{{ env["AMF_IPV4_ADDRESS"] if "AMF_IPV4_ADDRESS" in env.keys() else '0.0.0.0' }}";
      {%- endif %}
      # Default: 80
      PORT         = {{ env["AMF_PORT"] if "AMF_PORT" in env.keys() else '80' }};
      # Default: 8080
      HTTP2_PORT   = {{ env["AMF_HTTP2_PORT"] if "AMF_HTTP2_PORT" in env.keys() else '8080' }};
      # Default: v1
      API_VERSION  = "{{ env["AMF_API_VERSION"] if "AMF_API_VERSION" in env.keys() else 'v1' }}";
      FQDN         = "{{ env["AMF_FQDN"] if "AMF_FQDN" in env.keys() else 'localhost' }}"
    };

    SMF :
    {
      {%- if env["SMF_HOSTNAME"] is defined %}
      IPV4_ADDRESS = "{{ resolve(env["SMF_HOSTNAME"]) }}";
      {%- else %}
      IPV4_ADDRESS = "{{ env["SMF_IPV4_ADDRESS"] if "SMF_IPV4_ADDRESS" in env.keys() else '0.0.0.0' }}";
      {%- endif %}
      # Default: 80
      PORT         = {{ env["SMF_PORT"] if "SMF_PORT" in env.keys() else '80' }};
      # Default: 8080
      HTTP2_PORT   = {{ env["SMF_HTTP2_PORT"] if "SMF_HTTP2_PORT" in env.keys() else '8080' }};
      # Default: v1
      API_VERSION  = "{{ env["SMF_API_VERSION"] if "SMF_API_VERSION" in env.keys() else 'v1' }}";
      FQDN         = "{{ env["SMF_FQDN"] if "SMF_FQDN" in env.keys() else 'localhost' }}"
    };

    UDM :
    {
      {%- if env["UDM_HOSTNAME"] is defined %}
      IPV4_ADDRESS = "{{ resolve(env["UDM_HOSTNAME"]) }}";
      {%- else %}
      IPV4_ADDRESS = "{{ env["UDM_IPV4_ADDRESS"] if "UDM_IPV4_ADDRESS" in env.keys() else '0.0.0.0' }}";
      {%- endif %}
      # Default: 80
      PORT         = {{ env["UDM_PORT"] if "UDM_PORT" in env.keys() else '80' }};
      # Default: 8080
      HTTP2_PORT   = {{ env["UDM_HTTP2_PORT"] if "UDM_HTTP2_PORT" in env.keys() else '8080' }};
      # Default: v1
      API_VERSION  = "{{ env["UDM_API_VERSION"] if "UDM_API_VERSION" in env.keys() else 'v1' }}";
      FQDN         = "{{ env["UDM_FQDN"] if "UDM_FQDN" in env.keys() else 'localhost' }}"
    };

    # SUPPORT FEATURES
    SUPPORT_FEATURES:
    {
      # STRING, {"yes", "no"},
      # Set to yes if NEF will rely on a DNS to resolve FQDN
      USE_FQDN_DNS = "{{ env["USE_FQDN_DNS"] if "USE_FQDN_DNS" in env.keys() else 'no' }}";
      # Default: no
      USE_HTTP2 = "{{ env["USE_HTTP2"] if "USE_HTTP2" in env.keys() else 'no' }}";
    }

};

