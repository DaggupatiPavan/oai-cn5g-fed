/**
 * 3gpp-traffic-influence
 * API for AF traffic influence Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualTrafficInfluenceSubscriptionApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_TRAFFIC_INFLUENCE_SUBSCRIPTION_API_IMPL_H_
#define INDIVIDUAL_TRAFFIC_INFLUENCE_SUBSCRIPTION_API_IMPL_H_

#include <IndividualTrafficInfluenceSubscriptionApi.h>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <memory>
#include <optional>
#include <string>

#include "ProblemDetails.h"
#include "TrafficInfluSub.h"
#include "TrafficInfluSubPatch.h"

namespace oai::nef::api {

using namespace oai::nef::model;

class IndividualTrafficInfluenceSubscriptionApiImpl
    : public oai::nef::api::IndividualTrafficInfluenceSubscriptionApi {
 public:
  explicit IndividualTrafficInfluenceSubscriptionApiImpl(
      const std::shared_ptr<Pistache::Rest::Router>& rtr);
  ~IndividualTrafficInfluenceSubscriptionApiImpl() override = default;

  void af_id_subscriptions_subscription_id_delete(
      const std::string& afId, const std::string& subscriptionId,
      Pistache::Http::ResponseWriter& response);
  void af_id_subscriptions_subscription_id_get(
      const std::string& afId, const std::string& subscriptionId,
      Pistache::Http::ResponseWriter& response);
  void af_id_subscriptions_subscription_id_patch(
      const std::string& afId, const std::string& subscriptionId,
      const TrafficInfluSubPatch& trafficInfluSubPatch,
      Pistache::Http::ResponseWriter& response);
  void af_id_subscriptions_subscription_id_put(
      const std::string& afId, const std::string& subscriptionId,
      const TrafficInfluSub& trafficInfluSub,
      Pistache::Http::ResponseWriter& response);
};

}  // namespace oai::nef::api

#endif
