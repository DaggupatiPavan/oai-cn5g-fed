/**
 * 3gpp-monitoring-event
 * API for Monitoring Event. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualMonitoringEventSubscriptionApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_MONITORING_EVENT_SUBSCRIPTION_API_IMPL_H_
#define INDIVIDUAL_MONITORING_EVENT_SUBSCRIPTION_API_IMPL_H_

#include <IndividualMonitoringEventSubscriptionApi.h>
#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>

#include <memory>
#include <optional>
#include <string>
#include <vector>

#include "MonitoringEventReport.h"
#include "MonitoringEventSubscription.h"
#include "PatchItem.h"
#include "ProblemDetails.h"
#include "nef_app.hpp"

namespace oai::nef::api {

using namespace oai::nef::model;

class IndividualMonitoringEventSubscriptionApiImpl
    : public oai::nef::api::IndividualMonitoringEventSubscriptionApi {
 public:
  explicit IndividualMonitoringEventSubscriptionApiImpl(
      const std::shared_ptr<Pistache::Rest::Router>& rtr,
      oai::nef::app::nef_app* nef_app_inst, std::string address);
  ~IndividualMonitoringEventSubscriptionApiImpl() override = default;

  void delete_ind_monitoring_event_subscription(
      const std::string& scsAsId, const std::string& subscriptionId,
      Pistache::Http::ResponseWriter& response);
  void fetch_ind_monitoring_event_subscription(
      const std::string& scsAsId, const std::string& subscriptionId,
      Pistache::Http::ResponseWriter& response);
  void modify_ind_monitoring_event_subscription(
      const std::string& scsAsId, const std::string& subscriptionId,
      const std::vector<PatchItem>& patchItem,
      Pistache::Http::ResponseWriter& response);
  void update_ind_monitoring_event_subscription(
      const std::string& scsAsId, const std::string& subscriptionId,
      const MonitoringEventSubscription& monitoringEventSubscription,
      Pistache::Http::ResponseWriter& response);

 private:
  oai::nef::app::nef_app* m_nef_app;
  std::string m_address;
};

}  // namespace oai::nef::api

#endif
