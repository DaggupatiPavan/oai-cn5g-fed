/**
 * 3gpp-applying-bdt-policy
 * API for applying BDT policy Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IndividualAppliedBDTPolicySubscriptionApiImpl.h"

namespace oai {
namespace nef {
namespace api {

using namespace oai::nef::model;

IndividualAppliedBDTPolicySubscriptionApiImpl::
    IndividualAppliedBDTPolicySubscriptionApiImpl(
        const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : IndividualAppliedBDTPolicySubscriptionApi(rtr) {}

void IndividualAppliedBDTPolicySubscriptionApiImpl::
    af_id_subscriptions_subscription_id_delete(
        const std::string& afId, const std::string& subscriptionId,
        Pistache::Http::ResponseWriter& response) {
  response.send(
      Pistache::Http::Code::Ok, "This API has not been implemented yet!\n");
}
void IndividualAppliedBDTPolicySubscriptionApiImpl::
    af_id_subscriptions_subscription_id_get(
        const std::string& afId, const std::string& subscriptionId,
        Pistache::Http::ResponseWriter& response) {
  response.send(
      Pistache::Http::Code::Ok, "This API has not been implemented yet!\n");
}
void IndividualAppliedBDTPolicySubscriptionApiImpl::
    af_id_subscriptions_subscription_id_patch(
        const std::string& afId, const std::string& subscriptionId,
        const AppliedBdtPolicyPatch& appliedBdtPolicyPatch,
        Pistache::Http::ResponseWriter& response) {
  response.send(
      Pistache::Http::Code::Ok, "This API has not been implemented yet!\n");
}

}  // namespace api
}  // namespace nef
}  // namespace oai
