/**
 * 3gpp-akma
 * API for AKMA. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI,
 * TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AkmaAfKeyRequest.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

AkmaAfKeyRequest::AkmaAfKeyRequest() {
  m_SuppFeat      = "";
  m_SuppFeatIsSet = false;
  m_AfId          = "";
  m_AKId          = "";
}

void AkmaAfKeyRequest::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool AkmaAfKeyRequest::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool AkmaAfKeyRequest::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "AkmaAfKeyRequest" : pathPrefix;

  if (suppFeatIsSet()) {
    const std::string& value           = m_SuppFeat;
    const std::string currentValuePath = _pathPrefix + ".suppFeat";
  }

  return success;
}

bool AkmaAfKeyRequest::operator==(const AkmaAfKeyRequest& rhs) const {
  return

      ((!suppFeatIsSet() && !rhs.suppFeatIsSet()) ||
       (suppFeatIsSet() && rhs.suppFeatIsSet() &&
        getSuppFeat() == rhs.getSuppFeat())) &&

      (getAfId() == rhs.getAfId()) &&

      (getAKId() == rhs.getAKId())

          ;
}

bool AkmaAfKeyRequest::operator!=(const AkmaAfKeyRequest& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AkmaAfKeyRequest& o) {
  j = nlohmann::json();
  if (o.suppFeatIsSet()) j["suppFeat"] = o.m_SuppFeat;
  j["afId"] = o.m_AfId;
  j["aKId"] = o.m_AKId;
}

void from_json(const nlohmann::json& j, AkmaAfKeyRequest& o) {
  if (j.find("suppFeat") != j.end()) {
    j.at("suppFeat").get_to(o.m_SuppFeat);
    o.m_SuppFeatIsSet = true;
  }
  j.at("afId").get_to(o.m_AfId);
  j.at("aKId").get_to(o.m_AKId);
}

std::string AkmaAfKeyRequest::getSuppFeat() const {
  return m_SuppFeat;
}
void AkmaAfKeyRequest::setSuppFeat(std::string const& value) {
  m_SuppFeat      = value;
  m_SuppFeatIsSet = true;
}
bool AkmaAfKeyRequest::suppFeatIsSet() const {
  return m_SuppFeatIsSet;
}
void AkmaAfKeyRequest::unsetSuppFeat() {
  m_SuppFeatIsSet = false;
}
std::string AkmaAfKeyRequest::getAfId() const {
  return m_AfId;
}
void AkmaAfKeyRequest::setAfId(std::string const& value) {
  m_AfId = value;
}
std::string AkmaAfKeyRequest::getAKId() const {
  return m_AKId;
}
void AkmaAfKeyRequest::setAKId(std::string const& value) {
  m_AKId = value;
}

}  // namespace oai::nef::model
