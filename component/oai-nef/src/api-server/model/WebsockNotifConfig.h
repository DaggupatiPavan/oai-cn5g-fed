/**
 * 3gpp-traffic-influence
 * API for AF traffic influence Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * WebsockNotifConfig.h
 *
 * Represents the configuration information for the delivery of notifications
 * over Websockets.
 */

#ifndef WebsockNotifConfig_H_
#define WebsockNotifConfig_H_

#include <nlohmann/json.hpp>
#include <string>

namespace oai::nef::model {

/// <summary>
/// Represents the configuration information for the delivery of notifications
/// over Websockets.
/// </summary>
class WebsockNotifConfig {
 public:
  WebsockNotifConfig();
  virtual ~WebsockNotifConfig() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const WebsockNotifConfig& rhs) const;
  bool operator!=(const WebsockNotifConfig& rhs) const;

  /////////////////////////////////////////////
  /// WebsockNotifConfig members

  /// <summary>
  /// string formatted according to IETF RFC 3986 identifying a referenced
  /// resource.
  /// </summary>
  std::string getWebsocketUri() const;
  void setWebsocketUri(std::string const& value);
  bool websocketUriIsSet() const;
  void unsetWebsocketUri();
  /// <summary>
  /// Set by the SCS/AS to indicate that the Websocket delivery is requested.
  /// </summary>
  bool isRequestWebsocketUri() const;
  void setRequestWebsocketUri(bool const value);
  bool requestWebsocketUriIsSet() const;
  void unsetRequestWebsocketUri();

  friend void to_json(nlohmann::json& j, const WebsockNotifConfig& o);
  friend void from_json(const nlohmann::json& j, WebsockNotifConfig& o);

 protected:
  std::string m_WebsocketUri;
  bool m_WebsocketUriIsSet;
  bool m_RequestWebsocketUri;
  bool m_RequestWebsocketUriIsSet;
};

}  // namespace oai::nef::model

#endif /* WebsockNotifConfig_H_ */
