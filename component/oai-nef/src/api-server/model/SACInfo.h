/**
 * 3gpp-monitoring-event
 * API for Monitoring Event. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SACInfo.h
 *
 * Represents threshold(s) to control the triggering of network slice reporting
 * notifications or the information contained in the network slice reporting
 * notification.
 */

#ifndef SACInfo_H_
#define SACInfo_H_

#include <nlohmann/json.hpp>

namespace oai::nef::model {

/// <summary>
/// Represents threshold(s) to control the triggering of network slice reporting
/// notifications or the information contained in the network slice reporting
/// notification.
/// </summary>
class SACInfo {
 public:
  SACInfo();
  virtual ~SACInfo() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const SACInfo& rhs) const;
  bool operator!=(const SACInfo& rhs) const;

  /////////////////////////////////////////////
  /// SACInfo members

  /// <summary>
  ///
  /// </summary>
  int32_t getNumericValNumUes() const;
  void setNumericValNumUes(int32_t const value);
  bool numericValNumUesIsSet() const;
  void unsetNumericValNumUes();
  /// <summary>
  ///
  /// </summary>
  int32_t getNumericValNumPduSess() const;
  void setNumericValNumPduSess(int32_t const value);
  bool numericValNumPduSessIsSet() const;
  void unsetNumericValNumPduSess();
  /// <summary>
  ///
  /// </summary>
  int32_t getPercValueNumUes() const;
  void setPercValueNumUes(int32_t const value);
  bool percValueNumUesIsSet() const;
  void unsetPercValueNumUes();
  /// <summary>
  ///
  /// </summary>
  int32_t getPercValueNumPduSess() const;
  void setPercValueNumPduSess(int32_t const value);
  bool percValueNumPduSessIsSet() const;
  void unsetPercValueNumPduSess();

  friend void to_json(nlohmann::json& j, const SACInfo& o);
  friend void from_json(const nlohmann::json& j, SACInfo& o);

 protected:
  int32_t m_NumericValNumUes;
  bool m_NumericValNumUesIsSet;
  int32_t m_NumericValNumPduSess;
  bool m_NumericValNumPduSessIsSet;
  int32_t m_PercValueNumUes;
  bool m_PercValueNumUesIsSet;
  int32_t m_PercValueNumPduSess;
  bool m_PercValueNumPduSessIsSet;
};

}  // namespace oai::nef::model

#endif /* SACInfo_H_ */
