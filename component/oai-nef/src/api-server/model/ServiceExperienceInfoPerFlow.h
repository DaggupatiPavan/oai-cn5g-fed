/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ServiceExperienceInfoPerFlow.h
 *
 *
 */

#ifndef ServiceExperienceInfoPerFlow_H_
#define ServiceExperienceInfoPerFlow_H_

#include <nlohmann/json.hpp>
#include <string>

#include "EthFlowDescription.h"
#include "FlowInfo.h"
#include "SvcExperience.h"
#include "TimeWindow.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class ServiceExperienceInfoPerFlow {
 public:
  ServiceExperienceInfoPerFlow();
  virtual ~ServiceExperienceInfoPerFlow() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const ServiceExperienceInfoPerFlow& rhs) const;
  bool operator!=(const ServiceExperienceInfoPerFlow& rhs) const;

  /////////////////////////////////////////////
  /// ServiceExperienceInfoPerFlow members

  /// <summary>
  ///
  /// </summary>
  SvcExperience getSvcExprc() const;
  void setSvcExprc(SvcExperience const& value);
  bool svcExprcIsSet() const;
  void unsetSvcExprc();
  /// <summary>
  ///
  /// </summary>
  TimeWindow getTimeIntev() const;
  void setTimeIntev(TimeWindow const& value);
  bool timeIntevIsSet() const;
  void unsetTimeIntev();
  /// <summary>
  ///
  /// </summary>
  std::string getDnai() const;
  void setDnai(std::string const& value);
  bool dnaiIsSet() const;
  void unsetDnai();
  /// <summary>
  ///
  /// </summary>
  FlowInfo getIpTrafficFilter() const;
  void setIpTrafficFilter(FlowInfo const& value);
  bool ipTrafficFilterIsSet() const;
  void unsetIpTrafficFilter();
  /// <summary>
  ///
  /// </summary>
  EthFlowDescription getEthTrafficFilter() const;
  void setEthTrafficFilter(EthFlowDescription const& value);
  bool ethTrafficFilterIsSet() const;
  void unsetEthTrafficFilter();

  friend void to_json(nlohmann::json& j, const ServiceExperienceInfoPerFlow& o);
  friend void from_json(
      const nlohmann::json& j, ServiceExperienceInfoPerFlow& o);

 protected:
  SvcExperience m_SvcExprc;
  bool m_SvcExprcIsSet;
  TimeWindow m_TimeIntev;
  bool m_TimeIntevIsSet;
  std::string m_Dnai;
  bool m_DnaiIsSet;
  FlowInfo m_IpTrafficFilter;
  bool m_IpTrafficFilterIsSet;
  EthFlowDescription m_EthTrafficFilter;
  bool m_EthTrafficFilterIsSet;
};

}  // namespace oai::nef::model

#endif /* ServiceExperienceInfoPerFlow_H_ */
