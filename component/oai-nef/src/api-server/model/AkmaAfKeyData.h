/**
 * 3gpp-akma
 * API for AKMA. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI,
 * TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AkmaAfKeyData.h
 *
 *
 */

#ifndef AkmaAfKeyData_H_
#define AkmaAfKeyData_H_

#include <nlohmann/json.hpp>
#include <string>

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class AkmaAfKeyData {
 public:
  AkmaAfKeyData();
  virtual ~AkmaAfKeyData() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const AkmaAfKeyData& rhs) const;
  bool operator!=(const AkmaAfKeyData& rhs) const;

  /////////////////////////////////////////////
  /// AkmaAfKeyData members

  /// <summary>
  ///
  /// </summary>
  std::string getSuppFeat() const;
  void setSuppFeat(std::string const& value);
  bool suppFeatIsSet() const;
  void unsetSuppFeat();
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getExpiry() const;
  void setExpiry(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getKaf() const;
  void setKaf(std::string const& value);

  friend void to_json(nlohmann::json& j, const AkmaAfKeyData& o);
  friend void from_json(const nlohmann::json& j, AkmaAfKeyData& o);

 protected:
  std::string m_SuppFeat;
  bool m_SuppFeatIsSet;
  std::string m_Expiry;

  std::string m_Kaf;
};

}  // namespace oai::nef::model

#endif /* AkmaAfKeyData_H_ */
