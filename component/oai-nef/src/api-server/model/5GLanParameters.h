/**
 * 3gpp-5glan-pp
 * API for 5G LAN Parameter Provision. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * _5GLanParameters.h
 *
 *
 */

#ifndef _5GLanParameters_H_
#define _5GLanParameters_H_

#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

#include "AaaUsage.h"
#include "AppDescriptor.h"
#include "Ipv6Addr.h"
#include "PduSessionType.h"
#include "Snssai.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class _5GLanParameters {
 public:
  _5GLanParameters();
  virtual ~_5GLanParameters() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const _5GLanParameters& rhs) const;
  bool operator!=(const _5GLanParameters& rhs) const;

  /////////////////////////////////////////////
  /// _5GLanParameters members

  /// <summary>
  /// string containing a local identifier followed by \&quot;@\&quot; and a
  /// domain identifier. Both the local identifier and the domain identifier
  /// shall be encoded as strings that do not contain any \&quot;@\&quot;
  /// characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more
  /// information.
  /// </summary>
  std::string getExterGroupId() const;
  void setExterGroupId(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, std::string> getGpsis() const;
  void setGpsis(std::map<std::string, std::string> const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getDnn() const;
  void setDnn(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getAaaIpv4Addr() const;
  void setAaaIpv4Addr(std::string const& value);
  bool aaaIpv4AddrIsSet() const;
  void unsetAaaIpv4Addr();
  /// <summary>
  ///
  /// </summary>
  Ipv6Addr getAaaIpv6Addr() const;
  void setAaaIpv6Addr(Ipv6Addr const& value);
  bool aaaIpv6AddrIsSet() const;
  void unsetAaaIpv6Addr();
  /// <summary>
  ///
  /// </summary>
  std::vector<AaaUsage> getAaaUsgs() const;
  void setAaaUsgs(std::vector<AaaUsage> const& value);
  bool aaaUsgsIsSet() const;
  void unsetAaaUsgs();
  /// <summary>
  ///
  /// </summary>
  std::string getMtcProviderId() const;
  void setMtcProviderId(std::string const& value);
  bool mtcProviderIdIsSet() const;
  void unsetMtcProviderId();
  /// <summary>
  ///
  /// </summary>
  Snssai getSnssai() const;
  void setSnssai(Snssai const& value);
  /// <summary>
  ///
  /// </summary>
  PduSessionType getSessionType() const;
  void setSessionType(PduSessionType const& value);
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, AppDescriptor> getAppDesps() const;
  void setAppDesps(std::map<std::string, AppDescriptor> const& value);

  friend void to_json(nlohmann::json& j, const _5GLanParameters& o);
  friend void from_json(const nlohmann::json& j, _5GLanParameters& o);

 protected:
  std::string m_ExterGroupId;

  std::map<std::string, std::string> m_Gpsis;

  std::string m_Dnn;

  std::string m_AaaIpv4Addr;
  bool m_AaaIpv4AddrIsSet;
  Ipv6Addr m_AaaIpv6Addr;
  bool m_AaaIpv6AddrIsSet;
  std::vector<AaaUsage> m_AaaUsgs;
  bool m_AaaUsgsIsSet;
  std::string m_MtcProviderId;
  bool m_MtcProviderIdIsSet;
  Snssai m_Snssai;

  PduSessionType m_SessionType;

  std::map<std::string, AppDescriptor> m_AppDesps;
};

}  // namespace oai::nef::model

#endif /* _5GLanParameters_H_ */
