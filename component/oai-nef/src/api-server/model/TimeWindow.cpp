/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "TimeWindow.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

TimeWindow::TimeWindow() {
  m_StartTime = "";
  m_StopTime  = "";
}

void TimeWindow::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool TimeWindow::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool TimeWindow::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "TimeWindow" : pathPrefix;

  return success;
}

bool TimeWindow::operator==(const TimeWindow& rhs) const {
  return

      (getStartTime() == rhs.getStartTime()) &&

      (getStopTime() == rhs.getStopTime())

          ;
}

bool TimeWindow::operator!=(const TimeWindow& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const TimeWindow& o) {
  j              = nlohmann::json();
  j["startTime"] = o.m_StartTime;
  j["stopTime"]  = o.m_StopTime;
}

void from_json(const nlohmann::json& j, TimeWindow& o) {
  j.at("startTime").get_to(o.m_StartTime);
  j.at("stopTime").get_to(o.m_StopTime);
}

std::string TimeWindow::getStartTime() const {
  return m_StartTime;
}
void TimeWindow::setStartTime(std::string const& value) {
  m_StartTime = value;
}
std::string TimeWindow::getStopTime() const {
  return m_StopTime;
}
void TimeWindow::setStopTime(std::string const& value) {
  m_StopTime = value;
}

}  // namespace oai::nef::model
