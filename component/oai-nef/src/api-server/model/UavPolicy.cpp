/**
 * 3gpp-monitoring-event
 * API for Monitoring Event. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "UavPolicy.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

UavPolicy::UavPolicy() {
  m_UavMoveInd = false;
  m_RevokeInd  = false;
}

void UavPolicy::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool UavPolicy::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool UavPolicy::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success                  = true;
  const std::string _pathPrefix = pathPrefix.empty() ? "UavPolicy" : pathPrefix;

  return success;
}

bool UavPolicy::operator==(const UavPolicy& rhs) const {
  return

      (isUavMoveInd() == rhs.isUavMoveInd()) &&

      (isRevokeInd() == rhs.isRevokeInd())

          ;
}

bool UavPolicy::operator!=(const UavPolicy& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const UavPolicy& o) {
  j               = nlohmann::json();
  j["uavMoveInd"] = o.m_UavMoveInd;
  j["revokeInd"]  = o.m_RevokeInd;
}

void from_json(const nlohmann::json& j, UavPolicy& o) {
  j.at("uavMoveInd").get_to(o.m_UavMoveInd);
  j.at("revokeInd").get_to(o.m_RevokeInd);
}

bool UavPolicy::isUavMoveInd() const {
  return m_UavMoveInd;
}
void UavPolicy::setUavMoveInd(bool const value) {
  m_UavMoveInd = value;
}
bool UavPolicy::isRevokeInd() const {
  return m_RevokeInd;
}
void UavPolicy::setRevokeInd(bool const value) {
  m_RevokeInd = value;
}

}  // namespace oai::nef::model
