/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * QosRequirement.h
 *
 *
 */

#ifndef QosRequirement_H_
#define QosRequirement_H_

#include <nlohmann/json.hpp>
#include <string>

#include "QosResourceType.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class QosRequirement {
 public:
  QosRequirement();
  virtual ~QosRequirement() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const QosRequirement& rhs) const;
  bool operator!=(const QosRequirement& rhs) const;

  /////////////////////////////////////////////
  /// QosRequirement members

  /// <summary>
  ///
  /// </summary>
  int32_t getR5qi() const;
  void setR5qi(int32_t const value);
  bool r5qiIsSet() const;
  void unsetr_5qi();
  /// <summary>
  ///
  /// </summary>
  std::string getGfbrUl() const;
  void setGfbrUl(std::string const& value);
  bool gfbrUlIsSet() const;
  void unsetGfbrUl();
  /// <summary>
  ///
  /// </summary>
  std::string getGfbrDl() const;
  void setGfbrDl(std::string const& value);
  bool gfbrDlIsSet() const;
  void unsetGfbrDl();
  /// <summary>
  ///
  /// </summary>
  QosResourceType getResType() const;
  void setResType(QosResourceType const& value);
  bool resTypeIsSet() const;
  void unsetResType();
  /// <summary>
  ///
  /// </summary>
  int32_t getPdb() const;
  void setPdb(int32_t const value);
  bool pdbIsSet() const;
  void unsetPdb();
  /// <summary>
  ///
  /// </summary>
  std::string getPer() const;
  void setPer(std::string const& value);
  bool perIsSet() const;
  void unsetPer();

  friend void to_json(nlohmann::json& j, const QosRequirement& o);
  friend void from_json(const nlohmann::json& j, QosRequirement& o);

 protected:
  int32_t m_r_5qi;
  bool m_r_5qiIsSet;
  std::string m_GfbrUl;
  bool m_GfbrUlIsSet;
  std::string m_GfbrDl;
  bool m_GfbrDlIsSet;
  QosResourceType m_ResType;
  bool m_ResTypeIsSet;
  int32_t m_Pdb;
  bool m_PdbIsSet;
  std::string m_Per;
  bool m_PerIsSet;
};

}  // namespace oai::nef::model

#endif /* QosRequirement_H_ */
