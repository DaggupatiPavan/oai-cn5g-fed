/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * UeLocationInfo.h
 *
 *
 */

#ifndef UeLocationInfo_H_
#define UeLocationInfo_H_

#include <nlohmann/json.hpp>

#include "LocationArea5G.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class UeLocationInfo {
 public:
  UeLocationInfo();
  virtual ~UeLocationInfo() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const UeLocationInfo& rhs) const;
  bool operator!=(const UeLocationInfo& rhs) const;

  /////////////////////////////////////////////
  /// UeLocationInfo members

  /// <summary>
  ///
  /// </summary>
  LocationArea5G getLoc() const;
  void setLoc(LocationArea5G const& value);
  /// <summary>
  ///
  /// </summary>
  int32_t getRatio() const;
  void setRatio(int32_t const value);
  bool ratioIsSet() const;
  void unsetRatio();
  /// <summary>
  ///
  /// </summary>
  int32_t getConfidence() const;
  void setConfidence(int32_t const value);
  bool confidenceIsSet() const;
  void unsetConfidence();

  friend void to_json(nlohmann::json& j, const UeLocationInfo& o);
  friend void from_json(const nlohmann::json& j, UeLocationInfo& o);

 protected:
  LocationArea5G m_Loc;

  int32_t m_Ratio;
  bool m_RatioIsSet;
  int32_t m_Confidence;
  bool m_ConfidenceIsSet;
};

}  // namespace oai::nef::model

#endif /* UeLocationInfo_H_ */
