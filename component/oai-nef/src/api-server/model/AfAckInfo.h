/**
 * 3gpp-traffic-influence
 * API for AF traffic influence Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AfAckInfo.h
 *
 *
 */

#ifndef AfAckInfo_H_
#define AfAckInfo_H_

#include <nlohmann/json.hpp>
#include <string>

#include "AfResultInfo.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class AfAckInfo {
 public:
  AfAckInfo();
  virtual ~AfAckInfo() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const AfAckInfo& rhs) const;
  bool operator!=(const AfAckInfo& rhs) const;

  /////////////////////////////////////////////
  /// AfAckInfo members

  /// <summary>
  ///
  /// </summary>
  std::string getAfTransId() const;
  void setAfTransId(std::string const& value);
  bool afTransIdIsSet() const;
  void unsetAfTransId();
  /// <summary>
  ///
  /// </summary>
  AfResultInfo getAckResult() const;
  void setAckResult(AfResultInfo const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getGpsi() const;
  void setGpsi(std::string const& value);
  bool gpsiIsSet() const;
  void unsetGpsi();

  friend void to_json(nlohmann::json& j, const AfAckInfo& o);
  friend void from_json(const nlohmann::json& j, AfAckInfo& o);

 protected:
  std::string m_AfTransId;
  bool m_AfTransIdIsSet;
  AfResultInfo m_AckResult;

  std::string m_Gpsi;
  bool m_GpsiIsSet;
};

}  // namespace oai::nef::model

#endif /* AfAckInfo_H_ */
