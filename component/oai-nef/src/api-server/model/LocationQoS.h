/**
 * 3gpp-monitoring-event
 * API for Monitoring Event. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * LocationQoS.h
 *
 *
 */

#ifndef LocationQoS_H_
#define LocationQoS_H_

#include <nlohmann/json.hpp>

#include "LcsQosClass.h"
#include "ResponseTime.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class LocationQoS {
 public:
  LocationQoS();
  virtual ~LocationQoS() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const LocationQoS& rhs) const;
  bool operator!=(const LocationQoS& rhs) const;

  /////////////////////////////////////////////
  /// LocationQoS members

  /// <summary>
  ///
  /// </summary>
  float getHAccuracy() const;
  void setHAccuracy(float const value);
  bool hAccuracyIsSet() const;
  void unsetHAccuracy();
  /// <summary>
  ///
  /// </summary>
  float getVAccuracy() const;
  void setVAccuracy(float const value);
  bool vAccuracyIsSet() const;
  void unsetVAccuracy();
  /// <summary>
  ///
  /// </summary>
  bool isVerticalRequested() const;
  void setVerticalRequested(bool const value);
  bool verticalRequestedIsSet() const;
  void unsetVerticalRequested();
  /// <summary>
  ///
  /// </summary>
  ResponseTime getResponseTime() const;
  void setResponseTime(ResponseTime const& value);
  bool responseTimeIsSet() const;
  void unsetResponseTime();
  /// <summary>
  ///
  /// </summary>
  LcsQosClass getLcsQosClass() const;
  void setLcsQosClass(LcsQosClass const& value);
  bool lcsQosClassIsSet() const;
  void unsetLcsQosClass();

  friend void to_json(nlohmann::json& j, const LocationQoS& o);
  friend void from_json(const nlohmann::json& j, LocationQoS& o);

 protected:
  float m_HAccuracy;
  bool m_HAccuracyIsSet;
  float m_VAccuracy;
  bool m_VAccuracyIsSet;
  bool m_VerticalRequested;
  bool m_VerticalRequestedIsSet;
  ResponseTime m_ResponseTime;
  bool m_ResponseTimeIsSet;
  LcsQosClass m_LcsQosClass;
  bool m_LcsQosClassIsSet;
};

}  // namespace oai::nef::model

#endif /* LocationQoS_H_ */
