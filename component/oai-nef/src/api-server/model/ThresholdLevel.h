/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ThresholdLevel.h
 *
 *
 */

#ifndef ThresholdLevel_H_
#define ThresholdLevel_H_

#include <nlohmann/json.hpp>

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class ThresholdLevel {
 public:
  ThresholdLevel();
  virtual ~ThresholdLevel() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const ThresholdLevel& rhs) const;
  bool operator!=(const ThresholdLevel& rhs) const;

  /////////////////////////////////////////////
  /// ThresholdLevel members

  /// <summary>
  ///
  /// </summary>
  int32_t getCongLevel() const;
  void setCongLevel(int32_t const value);
  bool congLevelIsSet() const;
  void unsetCongLevel();
  /// <summary>
  ///
  /// </summary>
  int32_t getNfLoadLevel() const;
  void setNfLoadLevel(int32_t const value);
  bool nfLoadLevelIsSet() const;
  void unsetNfLoadLevel();
  /// <summary>
  ///
  /// </summary>
  int32_t getNfCpuUsage() const;
  void setNfCpuUsage(int32_t const value);
  bool nfCpuUsageIsSet() const;
  void unsetNfCpuUsage();
  /// <summary>
  ///
  /// </summary>
  int32_t getNfMemoryUsage() const;
  void setNfMemoryUsage(int32_t const value);
  bool nfMemoryUsageIsSet() const;
  void unsetNfMemoryUsage();
  /// <summary>
  ///
  /// </summary>
  int32_t getNfStorageUsage() const;
  void setNfStorageUsage(int32_t const value);
  bool nfStorageUsageIsSet() const;
  void unsetNfStorageUsage();

  friend void to_json(nlohmann::json& j, const ThresholdLevel& o);
  friend void from_json(const nlohmann::json& j, ThresholdLevel& o);

 protected:
  int32_t m_CongLevel;
  bool m_CongLevelIsSet;
  int32_t m_NfLoadLevel;
  bool m_NfLoadLevelIsSet;
  int32_t m_NfCpuUsage;
  bool m_NfCpuUsageIsSet;
  int32_t m_NfMemoryUsage;
  bool m_NfMemoryUsageIsSet;
  int32_t m_NfStorageUsage;
  bool m_NfStorageUsageIsSet;
};

}  // namespace oai::nef::model

#endif /* ThresholdLevel_H_ */
