/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NetworkPerfExposure.h
 *
 *
 */

#ifndef NetworkPerfExposure_H_
#define NetworkPerfExposure_H_

#include <nlohmann/json.hpp>

#include "LocationArea5G.h"
#include "NetworkPerfType.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class NetworkPerfExposure {
 public:
  NetworkPerfExposure();
  virtual ~NetworkPerfExposure() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const NetworkPerfExposure& rhs) const;
  bool operator!=(const NetworkPerfExposure& rhs) const;

  /////////////////////////////////////////////
  /// NetworkPerfExposure members

  /// <summary>
  ///
  /// </summary>
  LocationArea5G getLocArea() const;
  void setLocArea(LocationArea5G const& value);
  /// <summary>
  ///
  /// </summary>
  NetworkPerfType getNwPerfType() const;
  void setNwPerfType(NetworkPerfType const& value);
  /// <summary>
  ///
  /// </summary>
  int32_t getRelativeRatio() const;
  void setRelativeRatio(int32_t const value);
  bool relativeRatioIsSet() const;
  void unsetRelativeRatio();
  /// <summary>
  ///
  /// </summary>
  int32_t getAbsoluteNum() const;
  void setAbsoluteNum(int32_t const value);
  bool absoluteNumIsSet() const;
  void unsetAbsoluteNum();
  /// <summary>
  ///
  /// </summary>
  int32_t getConfidence() const;
  void setConfidence(int32_t const value);
  bool confidenceIsSet() const;
  void unsetConfidence();

  friend void to_json(nlohmann::json& j, const NetworkPerfExposure& o);
  friend void from_json(const nlohmann::json& j, NetworkPerfExposure& o);

 protected:
  LocationArea5G m_LocArea;

  NetworkPerfType m_NwPerfType;

  int32_t m_RelativeRatio;
  bool m_RelativeRatioIsSet;
  int32_t m_AbsoluteNum;
  bool m_AbsoluteNumIsSet;
  int32_t m_Confidence;
  bool m_ConfidenceIsSet;
};

}  // namespace oai::nef::model

#endif /* NetworkPerfExposure_H_ */
