/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ExceptionTrend.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

ExceptionTrend::ExceptionTrend() {}

void ExceptionTrend::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool ExceptionTrend::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool ExceptionTrend::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "ExceptionTrend" : pathPrefix;

  if (!m_value.validate(msg)) {
    success = false;
  }
  return success;
}

bool ExceptionTrend::operator==(const ExceptionTrend& rhs) const {
  return

      getValue() == rhs.getValue();
}

bool ExceptionTrend::operator!=(const ExceptionTrend& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ExceptionTrend& o) {
  j = nlohmann::json();
  to_json(j, o.m_value);
}

void from_json(const nlohmann::json& j, ExceptionTrend& o) {
  from_json(j, o.m_value);
}

ExceptionTrend_anyOf ExceptionTrend::getValue() const {
  return m_value;
}

void ExceptionTrend::setValue(ExceptionTrend_anyOf value) {
  m_value = value;
}

ExceptionTrend_anyOf::eExceptionTrend_anyOf ExceptionTrend::getEnumValue()
    const {
  return m_value.getValue();
}

void ExceptionTrend::setEnumValue(
    ExceptionTrend_anyOf::eExceptionTrend_anyOf value) {
  m_value.setValue(value);
}

}  // namespace oai::nef::model
