/**
 * 3gpp-lpi-pp
 * API for Location Privacy Indication Parameters Provisioning. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ValidTimePeriod.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

ValidTimePeriod::ValidTimePeriod() {
  m_StartTime      = "";
  m_StartTimeIsSet = false;
  m_EndTime        = "";
  m_EndTimeIsSet   = false;
}

void ValidTimePeriod::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool ValidTimePeriod::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool ValidTimePeriod::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "ValidTimePeriod" : pathPrefix;

  return success;
}

bool ValidTimePeriod::operator==(const ValidTimePeriod& rhs) const {
  return

      ((!startTimeIsSet() && !rhs.startTimeIsSet()) ||
       (startTimeIsSet() && rhs.startTimeIsSet() &&
        getStartTime() == rhs.getStartTime())) &&

      ((!endTimeIsSet() && !rhs.endTimeIsSet()) ||
       (endTimeIsSet() && rhs.endTimeIsSet() &&
        getEndTime() == rhs.getEndTime()))

          ;
}

bool ValidTimePeriod::operator!=(const ValidTimePeriod& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ValidTimePeriod& o) {
  j = nlohmann::json();
  if (o.startTimeIsSet()) j["startTime"] = o.m_StartTime;
  if (o.endTimeIsSet()) j["endTime"] = o.m_EndTime;
}

void from_json(const nlohmann::json& j, ValidTimePeriod& o) {
  if (j.find("startTime") != j.end()) {
    j.at("startTime").get_to(o.m_StartTime);
    o.m_StartTimeIsSet = true;
  }
  if (j.find("endTime") != j.end()) {
    j.at("endTime").get_to(o.m_EndTime);
    o.m_EndTimeIsSet = true;
  }
}

std::string ValidTimePeriod::getStartTime() const {
  return m_StartTime;
}
void ValidTimePeriod::setStartTime(std::string const& value) {
  m_StartTime      = value;
  m_StartTimeIsSet = true;
}
bool ValidTimePeriod::startTimeIsSet() const {
  return m_StartTimeIsSet;
}
void ValidTimePeriod::unsetStartTime() {
  m_StartTimeIsSet = false;
}
std::string ValidTimePeriod::getEndTime() const {
  return m_EndTime;
}
void ValidTimePeriod::setEndTime(std::string const& value) {
  m_EndTime      = value;
  m_EndTimeIsSet = true;
}
bool ValidTimePeriod::endTimeIsSet() const {
  return m_EndTimeIsSet;
}
void ValidTimePeriod::unsetEndTime() {
  m_EndTimeIsSet = false;
}

}  // namespace oai::nef::model
