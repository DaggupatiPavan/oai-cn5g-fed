/**
 * 3gpp-lpi-pp
 * API for Location Privacy Indication Parameters Provisioning. Â© 2021, 3GPP
 * Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights
 * reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * LpiParametersProvision.h
 *
 *
 */

#ifndef LpiParametersProvision_H_
#define LpiParametersProvision_H_

#include <nlohmann/json.hpp>
#include <string>

#include "Lpi.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class LpiParametersProvision {
 public:
  LpiParametersProvision();
  virtual ~LpiParametersProvision() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const LpiParametersProvision& rhs) const;
  bool operator!=(const LpiParametersProvision& rhs) const;

  /////////////////////////////////////////////
  /// LpiParametersProvision members

  /// <summary>
  /// string formatted according to IETF RFC 3986 identifying a referenced
  /// resource.
  /// </summary>
  std::string getSelf() const;
  void setSelf(std::string const& value);
  bool selfIsSet() const;
  void unsetSelf();
  /// <summary>
  /// string containing a local identifier followed by \&quot;@\&quot; and a
  /// domain identifier. Both the local identifier and the domain identifier
  /// shall be encoded as strings that do not contain any \&quot;@\&quot;
  /// characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more
  /// information.
  /// </summary>
  std::string getExterGroupId() const;
  void setExterGroupId(std::string const& value);
  bool exterGroupIdIsSet() const;
  void unsetExterGroupId();
  /// <summary>
  ///
  /// </summary>
  std::string getGpsi() const;
  void setGpsi(std::string const& value);
  bool gpsiIsSet() const;
  void unsetGpsi();
  /// <summary>
  ///
  /// </summary>
  Lpi getLpi() const;
  void setLpi(Lpi const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getMtcProviderId() const;
  void setMtcProviderId(std::string const& value);
  bool mtcProviderIdIsSet() const;
  void unsetMtcProviderId();
  /// <summary>
  ///
  /// </summary>
  std::string getSuppFeat() const;
  void setSuppFeat(std::string const& value);

  friend void to_json(nlohmann::json& j, const LpiParametersProvision& o);
  friend void from_json(const nlohmann::json& j, LpiParametersProvision& o);

 protected:
  std::string m_Self;
  bool m_SelfIsSet;
  std::string m_ExterGroupId;
  bool m_ExterGroupIdIsSet;
  std::string m_Gpsi;
  bool m_GpsiIsSet;
  Lpi m_Lpi;

  std::string m_MtcProviderId;
  bool m_MtcProviderIdIsSet;
  std::string m_SuppFeat;
};

}  // namespace oai::nef::model

#endif /* LpiParametersProvision_H_ */
