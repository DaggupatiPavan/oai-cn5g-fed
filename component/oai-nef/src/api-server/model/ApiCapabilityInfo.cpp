/**
 * 3gpp-monitoring-event
 * API for Monitoring Event. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ApiCapabilityInfo.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

ApiCapabilityInfo::ApiCapabilityInfo() {
  m_ApiName  = "";
  m_SuppFeat = "";
}

void ApiCapabilityInfo::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool ApiCapabilityInfo::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool ApiCapabilityInfo::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "ApiCapabilityInfo" : pathPrefix;

  /* SuppFeat */ {
    const std::string& value           = m_SuppFeat;
    const std::string currentValuePath = _pathPrefix + ".suppFeat";
  }

  return success;
}

bool ApiCapabilityInfo::operator==(const ApiCapabilityInfo& rhs) const {
  return

      (getApiName() == rhs.getApiName()) &&

      (getSuppFeat() == rhs.getSuppFeat())

          ;
}

bool ApiCapabilityInfo::operator!=(const ApiCapabilityInfo& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ApiCapabilityInfo& o) {
  j             = nlohmann::json();
  j["apiName"]  = o.m_ApiName;
  j["suppFeat"] = o.m_SuppFeat;
}

void from_json(const nlohmann::json& j, ApiCapabilityInfo& o) {
  j.at("apiName").get_to(o.m_ApiName);
  j.at("suppFeat").get_to(o.m_SuppFeat);
}

std::string ApiCapabilityInfo::getApiName() const {
  return m_ApiName;
}
void ApiCapabilityInfo::setApiName(std::string const& value) {
  m_ApiName = value;
}
std::string ApiCapabilityInfo::getSuppFeat() const {
  return m_SuppFeat;
}
void ApiCapabilityInfo::setSuppFeat(std::string const& value) {
  m_SuppFeat = value;
}

}  // namespace oai::nef::model
