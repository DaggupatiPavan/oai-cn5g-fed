/**
 * 3gpp-5glan-pp
 * API for 5G LAN Parameter Provision. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AppDescriptorRm.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

AppDescriptorRm::AppDescriptorRm() {
  m_AppIdsIsSet = false;
}

void AppDescriptorRm::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool AppDescriptorRm::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool AppDescriptorRm::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "AppDescriptorRm" : pathPrefix;

  if (appIdsIsSet()) {
    const std::map<std::string, std::string>& value = m_AppIds;
    const std::string currentValuePath              = _pathPrefix + ".appIds";
  }

  return success;
}

bool AppDescriptorRm::operator==(const AppDescriptorRm& rhs) const {
  return

      ((!appIdsIsSet() && !rhs.appIdsIsSet()) ||
       (appIdsIsSet() && rhs.appIdsIsSet() && getAppIds() == rhs.getAppIds()))

          ;
}

bool AppDescriptorRm::operator!=(const AppDescriptorRm& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AppDescriptorRm& o) {
  j = nlohmann::json();
  if (o.appIdsIsSet() || !o.m_AppIds.empty()) j["appIds"] = o.m_AppIds;
}

void from_json(const nlohmann::json& j, AppDescriptorRm& o) {
  if (j.find("appIds") != j.end()) {
    j.at("appIds").get_to(o.m_AppIds);
    o.m_AppIdsIsSet = true;
  }
}

std::map<std::string, std::string> AppDescriptorRm::getAppIds() const {
  return m_AppIds;
}
void AppDescriptorRm::setAppIds(
    std::map<std::string, std::string> const& value) {
  m_AppIds      = value;
  m_AppIdsIsSet = true;
}
bool AppDescriptorRm::appIdsIsSet() const {
  return m_AppIdsIsSet;
}
void AppDescriptorRm::unsetAppIds() {
  m_AppIdsIsSet = false;
}

}  // namespace oai::nef::model
