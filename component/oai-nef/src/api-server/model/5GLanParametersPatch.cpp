/**
 * 3gpp-5glan-pp
 * API for 5G LAN Parameter Provision. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "5GLanParametersPatch.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

_5GLanParametersPatch::_5GLanParametersPatch() {
  m_GpsisIsSet    = false;
  m_AppDespsIsSet = false;
}

void _5GLanParametersPatch::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool _5GLanParametersPatch::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool _5GLanParametersPatch::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "5GLanParametersPatch" : pathPrefix;

  if (gpsisIsSet()) {
    const std::map<std::string, std::string>& value = m_Gpsis;
    const std::string currentValuePath              = _pathPrefix + ".gpsis";
  }

  if (appDespsIsSet()) {
    const std::map<std::string, AppDescriptorRm>& value = m_AppDesps;
    const std::string currentValuePath = _pathPrefix + ".appDesps";
  }

  return success;
}

bool _5GLanParametersPatch::operator==(const _5GLanParametersPatch& rhs) const {
  return

      ((!gpsisIsSet() && !rhs.gpsisIsSet()) ||
       (gpsisIsSet() && rhs.gpsisIsSet() && getGpsis() == rhs.getGpsis())) &&

      ((!appDespsIsSet() && !rhs.appDespsIsSet()) ||
       (appDespsIsSet() && rhs.appDespsIsSet() &&
        getAppDesps() == rhs.getAppDesps()))

          ;
}

bool _5GLanParametersPatch::operator!=(const _5GLanParametersPatch& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const _5GLanParametersPatch& o) {
  j = nlohmann::json();
  if (o.gpsisIsSet() || !o.m_Gpsis.empty()) j["gpsis"] = o.m_Gpsis;
  if (o.appDespsIsSet() || !o.m_AppDesps.empty()) j["appDesps"] = o.m_AppDesps;
}

void from_json(const nlohmann::json& j, _5GLanParametersPatch& o) {
  if (j.find("gpsis") != j.end()) {
    j.at("gpsis").get_to(o.m_Gpsis);
    o.m_GpsisIsSet = true;
  }
  if (j.find("appDesps") != j.end()) {
    j.at("appDesps").get_to(o.m_AppDesps);
    o.m_AppDespsIsSet = true;
  }
}

std::map<std::string, std::string> _5GLanParametersPatch::getGpsis() const {
  return m_Gpsis;
}
void _5GLanParametersPatch::setGpsis(
    std::map<std::string, std::string> const& value) {
  m_Gpsis      = value;
  m_GpsisIsSet = true;
}
bool _5GLanParametersPatch::gpsisIsSet() const {
  return m_GpsisIsSet;
}
void _5GLanParametersPatch::unsetGpsis() {
  m_GpsisIsSet = false;
}
std::map<std::string, AppDescriptorRm> _5GLanParametersPatch::getAppDesps()
    const {
  return m_AppDesps;
}
void _5GLanParametersPatch::setAppDesps(
    std::map<std::string, AppDescriptorRm> const& value) {
  m_AppDesps      = value;
  m_AppDespsIsSet = true;
}
bool _5GLanParametersPatch::appDespsIsSet() const {
  return m_AppDespsIsSet;
}
void _5GLanParametersPatch::unsetAppDesps() {
  m_AppDespsIsSet = false;
}

}  // namespace oai::nef::model
