/**
 * 3gpp-service-parameter
 * API for AF service paramter Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ServiceParameterDataPatch.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

ServiceParameterDataPatch::ServiceParameterDataPatch() {
  m_ParamOverPc5      = "";
  m_ParamOverPc5IsSet = false;
  m_ParamOverUu       = "";
  m_ParamOverUuIsSet  = false;
}

void ServiceParameterDataPatch::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool ServiceParameterDataPatch::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool ServiceParameterDataPatch::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "ServiceParameterDataPatch" : pathPrefix;

  return success;
}

bool ServiceParameterDataPatch::operator==(
    const ServiceParameterDataPatch& rhs) const {
  return

      ((!paramOverPc5IsSet() && !rhs.paramOverPc5IsSet()) ||
       (paramOverPc5IsSet() && rhs.paramOverPc5IsSet() &&
        getParamOverPc5() == rhs.getParamOverPc5())) &&

      ((!paramOverUuIsSet() && !rhs.paramOverUuIsSet()) ||
       (paramOverUuIsSet() && rhs.paramOverUuIsSet() &&
        getParamOverUu() == rhs.getParamOverUu()))

          ;
}

bool ServiceParameterDataPatch::operator!=(
    const ServiceParameterDataPatch& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ServiceParameterDataPatch& o) {
  j = nlohmann::json();
  if (o.paramOverPc5IsSet()) j["paramOverPc5"] = o.m_ParamOverPc5;
  if (o.paramOverUuIsSet()) j["ParamOverUu"] = o.m_ParamOverUu;
}

void from_json(const nlohmann::json& j, ServiceParameterDataPatch& o) {
  if (j.find("paramOverPc5") != j.end()) {
    j.at("paramOverPc5").get_to(o.m_ParamOverPc5);
    o.m_ParamOverPc5IsSet = true;
  }
  if (j.find("ParamOverUu") != j.end()) {
    j.at("ParamOverUu").get_to(o.m_ParamOverUu);
    o.m_ParamOverUuIsSet = true;
  }
}

std::string ServiceParameterDataPatch::getParamOverPc5() const {
  return m_ParamOverPc5;
}
void ServiceParameterDataPatch::setParamOverPc5(std::string const& value) {
  m_ParamOverPc5      = value;
  m_ParamOverPc5IsSet = true;
}
bool ServiceParameterDataPatch::paramOverPc5IsSet() const {
  return m_ParamOverPc5IsSet;
}
void ServiceParameterDataPatch::unsetParamOverPc5() {
  m_ParamOverPc5IsSet = false;
}
std::string ServiceParameterDataPatch::getParamOverUu() const {
  return m_ParamOverUu;
}
void ServiceParameterDataPatch::setParamOverUu(std::string const& value) {
  m_ParamOverUu      = value;
  m_ParamOverUuIsSet = true;
}
bool ServiceParameterDataPatch::paramOverUuIsSet() const {
  return m_ParamOverUuIsSet;
}
void ServiceParameterDataPatch::unsetParamOverUu() {
  m_ParamOverUuIsSet = false;
}

}  // namespace oai::nef::model
