/**
 * 3gpp-traffic-influence
 * API for AF traffic influence Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "WebsockNotifConfig.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

WebsockNotifConfig::WebsockNotifConfig() {
  m_WebsocketUri             = "";
  m_WebsocketUriIsSet        = false;
  m_RequestWebsocketUri      = false;
  m_RequestWebsocketUriIsSet = false;
}

void WebsockNotifConfig::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool WebsockNotifConfig::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool WebsockNotifConfig::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "WebsockNotifConfig" : pathPrefix;

  return success;
}

bool WebsockNotifConfig::operator==(const WebsockNotifConfig& rhs) const {
  return

      ((!websocketUriIsSet() && !rhs.websocketUriIsSet()) ||
       (websocketUriIsSet() && rhs.websocketUriIsSet() &&
        getWebsocketUri() == rhs.getWebsocketUri())) &&

      ((!requestWebsocketUriIsSet() && !rhs.requestWebsocketUriIsSet()) ||
       (requestWebsocketUriIsSet() && rhs.requestWebsocketUriIsSet() &&
        isRequestWebsocketUri() == rhs.isRequestWebsocketUri()))

          ;
}

bool WebsockNotifConfig::operator!=(const WebsockNotifConfig& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const WebsockNotifConfig& o) {
  j = nlohmann::json();
  if (o.websocketUriIsSet()) j["websocketUri"] = o.m_WebsocketUri;
  if (o.requestWebsocketUriIsSet())
    j["requestWebsocketUri"] = o.m_RequestWebsocketUri;
}

void from_json(const nlohmann::json& j, WebsockNotifConfig& o) {
  if (j.find("websocketUri") != j.end()) {
    j.at("websocketUri").get_to(o.m_WebsocketUri);
    o.m_WebsocketUriIsSet = true;
  }
  if (j.find("requestWebsocketUri") != j.end()) {
    j.at("requestWebsocketUri").get_to(o.m_RequestWebsocketUri);
    o.m_RequestWebsocketUriIsSet = true;
  }
}

std::string WebsockNotifConfig::getWebsocketUri() const {
  return m_WebsocketUri;
}
void WebsockNotifConfig::setWebsocketUri(std::string const& value) {
  m_WebsocketUri      = value;
  m_WebsocketUriIsSet = true;
}
bool WebsockNotifConfig::websocketUriIsSet() const {
  return m_WebsocketUriIsSet;
}
void WebsockNotifConfig::unsetWebsocketUri() {
  m_WebsocketUriIsSet = false;
}
bool WebsockNotifConfig::isRequestWebsocketUri() const {
  return m_RequestWebsocketUri;
}
void WebsockNotifConfig::setRequestWebsocketUri(bool const value) {
  m_RequestWebsocketUri      = value;
  m_RequestWebsocketUriIsSet = true;
}
bool WebsockNotifConfig::requestWebsocketUriIsSet() const {
  return m_RequestWebsocketUriIsSet;
}
void WebsockNotifConfig::unsetRequestWebsocketUri() {
  m_RequestWebsocketUriIsSet = false;
}

}  // namespace oai::nef::model
