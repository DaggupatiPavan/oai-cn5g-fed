/**
 * 3gpp-analyticsexposure
 * API for Analytics Exposure. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * QosSustainabilityExposure.h
 *
 *
 */

#ifndef QosSustainabilityExposure_H_
#define QosSustainabilityExposure_H_

#include <nlohmann/json.hpp>
#include <string>

#include "LocationArea5G.h"
#include "RetainabilityThreshold.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class QosSustainabilityExposure {
 public:
  QosSustainabilityExposure();
  virtual ~QosSustainabilityExposure() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const QosSustainabilityExposure& rhs) const;
  bool operator!=(const QosSustainabilityExposure& rhs) const;

  /////////////////////////////////////////////
  /// QosSustainabilityExposure members

  /// <summary>
  ///
  /// </summary>
  LocationArea5G getLocArea() const;
  void setLocArea(LocationArea5G const& value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getStartTs() const;
  void setStartTs(std::string const& value);
  /// <summary>
  /// string with format \&quot;date-time\&quot; as defined in OpenAPI.
  /// </summary>
  std::string getEndTs() const;
  void setEndTs(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  RetainabilityThreshold getQosFlowRetThd() const;
  void setQosFlowRetThd(RetainabilityThreshold const& value);
  bool qosFlowRetThdIsSet() const;
  void unsetQosFlowRetThd();
  /// <summary>
  ///
  /// </summary>
  std::string getRanUeThrouThd() const;
  void setRanUeThrouThd(std::string const& value);
  bool ranUeThrouThdIsSet() const;
  void unsetRanUeThrouThd();
  /// <summary>
  ///
  /// </summary>
  int32_t getConfidence() const;
  void setConfidence(int32_t const value);
  bool confidenceIsSet() const;
  void unsetConfidence();

  friend void to_json(nlohmann::json& j, const QosSustainabilityExposure& o);
  friend void from_json(const nlohmann::json& j, QosSustainabilityExposure& o);

 protected:
  LocationArea5G m_LocArea;

  std::string m_StartTs;

  std::string m_EndTs;

  RetainabilityThreshold m_QosFlowRetThd;
  bool m_QosFlowRetThdIsSet;
  std::string m_RanUeThrouThd;
  bool m_RanUeThrouThdIsSet;
  int32_t m_Confidence;
  bool m_ConfidenceIsSet;
};

}  // namespace oai::nef::model

#endif /* QosSustainabilityExposure_H_ */
