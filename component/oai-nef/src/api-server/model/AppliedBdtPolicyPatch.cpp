/**
 * 3gpp-applying-bdt-policy
 * API for applying BDT policy Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AppliedBdtPolicyPatch.h"

#include <sstream>

#include "Helpers.h"

namespace oai::nef::model {

AppliedBdtPolicyPatch::AppliedBdtPolicyPatch() {
  m_BdtRefId = "";
}

void AppliedBdtPolicyPatch::validate() const {
  std::stringstream msg;
  if (!validate(msg)) {
    throw oai::nef::helpers::ValidationException(msg.str());
  }
}

bool AppliedBdtPolicyPatch::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool AppliedBdtPolicyPatch::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "AppliedBdtPolicyPatch" : pathPrefix;

  return success;
}

bool AppliedBdtPolicyPatch::operator==(const AppliedBdtPolicyPatch& rhs) const {
  return

      (getBdtRefId() == rhs.getBdtRefId())

          ;
}

bool AppliedBdtPolicyPatch::operator!=(const AppliedBdtPolicyPatch& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AppliedBdtPolicyPatch& o) {
  j             = nlohmann::json();
  j["bdtRefId"] = o.m_BdtRefId;
}

void from_json(const nlohmann::json& j, AppliedBdtPolicyPatch& o) {
  j.at("bdtRefId").get_to(o.m_BdtRefId);
}

std::string AppliedBdtPolicyPatch::getBdtRefId() const {
  return m_BdtRefId;
}
void AppliedBdtPolicyPatch::setBdtRefId(std::string const& value) {
  m_BdtRefId = value;
}

}  // namespace oai::nef::model
