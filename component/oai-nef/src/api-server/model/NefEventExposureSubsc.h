/**
 * Nnef_EventExposure
 * NEF Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NefEventExposureSubsc.h
 *
 *
 */

#ifndef NefEventExposureSubsc_H_
#define NefEventExposureSubsc_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

#include "NefEventNotification.h"
#include "NefEventSubs.h"
#include "ReportingInformation.h"

namespace oai::nef::model {

/// <summary>
///
/// </summary>
class NefEventExposureSubsc {
 public:
  NefEventExposureSubsc();
  virtual ~NefEventExposureSubsc() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const NefEventExposureSubsc& rhs) const;
  bool operator!=(const NefEventExposureSubsc& rhs) const;

  /////////////////////////////////////////////
  /// NefEventExposureSubsc members

  /// <summary>
  ///
  /// </summary>
  std::vector<NefEventSubs> getEventsSubs() const;
  void setEventsSubs(std::vector<NefEventSubs> const& value);
  /// <summary>
  ///
  /// </summary>
  ReportingInformation getEventsRepInfo() const;
  void setEventsRepInfo(ReportingInformation const& value);
  bool eventsRepInfoIsSet() const;
  void unsetEventsRepInfo();
  /// <summary>
  ///
  /// </summary>
  std::string getNotifUri() const;
  void setNotifUri(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getNotifId() const;
  void setNotifId(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::vector<NefEventNotification> getEventNotifs() const;
  void setEventNotifs(std::vector<NefEventNotification> const& value);
  bool eventNotifsIsSet() const;
  void unsetEventNotifs();
  /// <summary>
  ///
  /// </summary>
  std::string getSuppFeat() const;
  void setSuppFeat(std::string const& value);
  bool suppFeatIsSet() const;
  void unsetSuppFeat();

  friend void to_json(nlohmann::json& j, const NefEventExposureSubsc& o);
  friend void from_json(const nlohmann::json& j, NefEventExposureSubsc& o);

 protected:
  std::vector<NefEventSubs> m_EventsSubs;

  ReportingInformation m_EventsRepInfo;
  bool m_EventsRepInfoIsSet;
  std::string m_NotifUri;

  std::string m_NotifId;

  std::vector<NefEventNotification> m_EventNotifs;
  bool m_EventNotifsIsSet;
  std::string m_SuppFeat;
  bool m_SuppFeatIsSet;
};

}  // namespace oai::nef::model

#endif /* NefEventExposureSubsc_H_ */
