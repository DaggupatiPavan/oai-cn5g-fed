apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-nssf.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "oai-nssf.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-nssf.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
      containers:
    {{- if .Values.includeTcpDumpContainer }}
      - name: tcpdump
        image: "{{ .Values.tcpdumpimage.repository }}:{{ .Values.tcpdumpimage.version }}"
        imagePullPolicy: {{ .Values.tcpdumpimage.pullPolicy }}
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.requests.tcpdump.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.limits.tcpdump.cpu | quote }}
        {{- end}}
        securityContext:
           privileged: true
           capabilities:
              add:
               - NET_ADMIN
              drop:
               - ALL
        {{- if .Values.start.tcpdump}}
        command:
          - /bin/sh
          - -c
          - /usr/sbin/tcpdump -i any -w /pcap/{{ .Chart.Name }}_`date +%Y-%m-%d_%H_%M-%S-%Z`.pcap
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        {{- if .Values.includeTcpDumpContainer}}
        {{- if .Values.persistent.sharedvolume}}
        volumeMounts:
        - mountPath: "/tmp/pcap"
          name: cn5g-pvc
        {{- end}}
        {{- end}}
    {{- end }}
      - name: nssf
        image: "{{ .Values.nfimage.repository }}:{{ .Values.nfimage.version }}"
        imagePullPolicy: {{ .Values.nfimage.pullPolicy }}
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.nf.memory | quote }}
            cpu: {{ .Values.resources.requests.nf.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.nf.memory | quote }}
            cpu: {{ .Values.resources.limits.nf.cpu | quote }}
        {{- end}}
        volumeMounts:
        - mountPath: /tmp/
          name: nssf-slice-config
        {{- if .Values.readinessProbe}}
        readinessProbe:
          exec:
            command:
            - sh
            - /openair-nssf/bin/healthcheck.sh
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end}}
        {{- if .Values.livenessProbe}}
        livenessProbe:
          exec:
            command:
            - sh
            - /openair-nssf/bin/healthcheck.sh
          initialDelaySeconds: 10
          periodSeconds: 5
        {{- end}}
        ports:
        - containerPort: {{ .Values.config.sbiPortHttp1 }}
          name: http1
        - containerPort: {{ .Values.config.sbiPortHttp2 }}
          name: http2
        {{- if .Values.start.nssf}}
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        env:
          - name: TZ
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: tz     
          - name: NSSF_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nssfname
          - name: INSTANCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: instance
          - name: PID_DIRECTORY
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pidDirectory
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: logLevel
          - name: NSSF_FQDN
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nssfFqdn
          - name: SBI_IF_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sbiIfName
          - name: SBI_PORT_HTTP1
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sbiPortHttp1
          - name: SBI_PORT_HTTP2
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sbiPortHttp2
          - name: SBI_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: sbiApiVersion
          - name: NSSF_SLICE_CONFIG
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: nssfSliceConfig
        {{- if .Values.start.nssf}}
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
      volumes:
      {{- if .Values.includeTcpDumpContainer}}
      {{- if .Values.persistent.sharedvolume}}
      - name: cn5g-pvc
        persistenceVolumeClaim:
          claimName: cn5g-pvc
      {{- end }}
      {{- end }}
      - name: nssf-slice-config
        configMap:
          name: {{ .Chart.Name }}-yamlconfig
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector: 
         {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
