kubernetesType: Openshift  #Vanilla for community kubernetes distribution

nfimage:
  repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-udr # image name either locally present or in a public/private repository
  version: UDR_TAG #image tag, develop tag for experimental features 
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

tcpdumpimage:
  repository: support-tools
  version: 8.7-8
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

#imagePullSecrets: 
#  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-udr-sa"

#service type is fixed to clusterIP, it is only support for non multus interface (eth0)

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  capabilities:
    add:
     - NET_ADMIN
    drop:
     - ALL
  privileged: true

service:
  type: ClusterIP
  http1Port: 80
  http2Port: 8080

start:
  udr: true
  tcpdump: true #start tcpdump collection to analyse but beware it will take a lot of space in the container/persistent volume

config:
  tz: "Europe/Paris"
  instance: "0"
  udrname: "oai-udr"
  pidDirectory: "/var/run"
  logLevel: "debug"
  sbiIfName: "eth0"
  sbiPortHttp1: "80"
  sbiPortHttp2: "8080"
  udrApiVersion: "v1"
  nrfIpv4Address: "127.0.0.1"
  nrfPort: "80"
  nrfApiVersion: "v1"
  nrfFqdn: "oai-nrf-svc"
  registerNrf: "no"
  usehttp2: "no"
  useFqdnDns: "yes"
  mySqlServer: "mysql"
  mySqlUser: "root"
  mySqlPass: "linux"
  mySqlDb: "oai_db"

persistent:
  sharedvolume: true
  volumeName: nfs-client
  size: 1Gi
  
resources:
  define: false
  limits:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi
  requests:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi

readinessProbe: true

livenessProbe: false

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: demophon

